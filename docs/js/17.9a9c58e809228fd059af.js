webpackJsonp([17],{469:function(s,t,n){s.exports=n(545)},545:function(s,t,n){var e=n(11)(null,n(546),null,null,null);s.exports=e.exports},546:function(s,t){s.exports={render:function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},staticRenderFns:[function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("section",[n("h2",[s._v("create-api 模块")]),s._v(" "),n("p",[s._v("该模块默认暴露出一个 "),n("code",{pre:!0},[s._v("createAPI")]),s._v(" 函数，可以实现以 API 的形式调用自定义组件。")]),s._v(" "),n("h3",[s._v("createAPI(Vue, Component, [events, single])")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("参数：")]),s._v(" "),n("ul",[n("li",[n("code",{pre:!0},[s._v("{Function} Vue")]),s._v(" Vue 函数")]),s._v(" "),n("li",[n("code",{pre:!0},[s._v("{Function | Object} Component")]),s._v(" Vue 组件，组件必须有 name")]),s._v(" "),n("li",[n("code",{pre:!0},[s._v("{Array} [events]")]),s._v(" 组件实例 emit 的事件名集合")]),s._v(" "),n("li",[n("code",{pre:!0},[s._v("{Boolean} [single]")]),s._v(" 是否为单例")])])]),s._v(" "),n("li",[n("p",[s._v("用法：")]),s._v(" "),n("ul",[n("li",[s._v("该方法在 Vue 的 prototype 上增加一个名为 "),n("code",{pre:!0},[s._v("$create{camelize(Component.name)}")]),s._v(" 的方法，这样就可以在其他组件中直接通过 "),n("code",{pre:!0},[s._v("const instance = this.$createAaBb(config, [renderFn])")]),s._v(" 这样来实例化组件了，而且这个实例化组件的元素是被附加到 "),n("code",{pre:!0},[s._v("body")]),s._v(" 元素下的；关于 "),n("code",{pre:!0},[s._v("$createAaBb")]),s._v(" 的参数：\n"),n("ul",[n("li",[n("code",{pre:!0},[s._v("{Object} config")]),s._v(" 组件配置参数，默认所有的值都会当做 props 传给组件，但是要排除 "),n("code",{pre:!0},[s._v("events")]),s._v(" 中的事件（默认会做转换，例如："),n("code",{pre:!0},[s._v("events")]),s._v(" 的值为 "),n("code",{pre:!0},[s._v("['click']")]),s._v("，那么 "),n("code",{pre:!0},[s._v("config")]),s._v(" 中的 "),n("code",{pre:!0},[s._v("onClick")]),s._v(" 就是作为 "),n("code",{pre:!0},[s._v("click")]),s._v(" 事件的回调函数，而不是作为 props 传递给组件）。")]),s._v(" "),n("li",[n("code",{pre:!0},[s._v("{Function} [renderFn]")]),s._v(" 是可选的参数，用于生成子 VNode 节点，一般场景是处理 slot。")])])]),s._v(" "),n("li",[s._v("注意调用后的返回值 "),n("code",{pre:!0},[s._v("instance")]),s._v(" 就是组件实例，这个实例会被"),n("strong",[s._v("附加")]),s._v("或者"),n("strong",[s._v("代理")]),s._v(" "),n("code",{pre:!0},[s._v("remove")]),s._v(" 方法，如果调用了，该实例就会被销毁且会从 "),n("code",{pre:!0},[s._v("body")]),s._v(" 下移除。")])])]),s._v(" "),n("li",[n("p",[s._v("示例：")]),s._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":"",class:"language-js"}},[n("span",{attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" Vue form "),n("span",{attrs:{class:"hljs-string"}},[s._v("'vue'")]),s._v("\n"),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 得到 createAPI")]),s._v("\n"),n("span",{attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" { createAPI } "),n("span",{attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" "),n("span",{attrs:{class:"hljs-string"}},[s._v("'cube-ui'")]),s._v("\n"),n("span",{attrs:{class:"hljs-comment"}},[s._v("// or import Cube from 'cube-ui'")]),s._v("\n"),n("span",{attrs:{class:"hljs-comment"}},[s._v("// const { createAPI } = Cube")]),s._v("\n"),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 需要提供 API 方式实例化的组件")]),s._v("\n"),n("span",{attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" MyComponent = Vue.extend({\n  "),n("span",{attrs:{class:"hljs-attr"}},[s._v("name")]),s._v(": "),n("span",{attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(",\n  "),n("span",{attrs:{class:"hljs-attr"}},[s._v("props")]),s._v(": {\n    "),n("span",{attrs:{class:"hljs-attr"}},[s._v("content")]),s._v(": {\n      "),n("span",{attrs:{class:"hljs-attr"}},[s._v("type")]),s._v(": "),n("span",{attrs:{class:"hljs-built_in"}},[s._v("String")]),s._v(",\n      "),n("span",{attrs:{class:"hljs-attr"}},[s._v("default")]),s._v(": "),n("span",{attrs:{class:"hljs-string"}},[s._v("'Hello'")]),s._v("\n    }\n  },\n  "),n("span",{attrs:{class:"hljs-attr"}},[s._v("template")]),s._v(": "),n("span",{attrs:{class:"hljs-string"}},[s._v('\'<div @click="clickHandler">{{content}}<slot name="other"></slot></div>\'')]),s._v(",\n  "),n("span",{attrs:{class:"hljs-attr"}},[s._v("methods")]),s._v(": {\n    clickHandler(e) {\n      "),n("span",{attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".$emit("),n("span",{attrs:{class:"hljs-string"}},[s._v("'click'")]),s._v(", e)\n    }\n  }\n})\n"),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 调用")]),s._v("\ncreateAPI(Vue, MyComponent, ["),n("span",{attrs:{class:"hljs-string"}},[s._v("'click'")]),s._v("], "),n("span",{attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(")\n"),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 在其他组件中使用")]),s._v("\n"),n("span",{attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Vue({\n  "),n("span",{attrs:{class:"hljs-attr"}},[s._v("el")]),s._v(": "),n("span",{attrs:{class:"hljs-string"}},[s._v("'#app'")]),s._v(",\n  "),n("span",{attrs:{class:"hljs-attr"}},[s._v("template")]),s._v(": "),n("span",{attrs:{class:"hljs-string"}},[s._v("'<button @click=\"showHello\">Show Hello</button>'")]),s._v(",\n  "),n("span",{attrs:{class:"hljs-attr"}},[s._v("methods")]),s._v(": {\n    showHello() {\n      "),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 直接调用")]),s._v("\n      "),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 传入配置对象，默认传入的所有对象全都当做 props 传入组件")]),s._v("\n      "),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 除了在调用 createAPI 的时候传入了 events，这里对应的就是")]),s._v("\n      "),n("span",{attrs:{class:"hljs-comment"}},[s._v("// on{event name} 会被当做事件回调处理")]),s._v("\n      "),n("span",{attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" instance = "),n("span",{attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".$createHello({\n        "),n("span",{attrs:{class:"hljs-attr"}},[s._v("content")]),s._v(": "),n("span",{attrs:{class:"hljs-string"}},[s._v("'My Hello Content'")]),s._v(",\n        onClick(e) {\n          "),n("span",{attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),n("span",{attrs:{class:"hljs-string"}},[s._v("'Hello component clicked.'")]),s._v(")\n        }\n      }, "),n("span",{attrs:{class:"hljs-comment"}},[s._v("/* renderFn */")]),s._v(" (createElement) => {\n        "),n("span",{attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" [\n          createElement("),n("span",{attrs:{class:"hljs-string"}},[s._v("'p'")]),s._v(", {\n            "),n("span",{attrs:{class:"hljs-attr"}},[s._v("slot")]),s._v(": "),n("span",{attrs:{class:"hljs-string"}},[s._v("'other'")]),s._v("\n          }, "),n("span",{attrs:{class:"hljs-string"}},[s._v("'other content'")]),s._v(")\n        ]\n      })\n      "),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 通过 Vue 组件的 $on 也是可以监听的，看使用场景")]),s._v("\n      instance.$on("),n("span",{attrs:{class:"hljs-string"}},[s._v("'click'")]),s._v(", (e) => {\n        "),n("span",{attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),n("span",{attrs:{class:"hljs-string"}},[s._v("'on click'")]),s._v(", e)\n      })\n      "),n("span",{attrs:{class:"hljs-comment"}},[s._v("// 移除销毁")]),s._v("\n      instance.remove()\n    }\n  }\n})\n")])]),s._v(" "),n("p",[s._v("示例中就是创建了一个需要 API 调用的组件 "),n("code",{pre:!0},[s._v("MyComponent")]),s._v("，名字为 "),n("code",{pre:!0},[s._v("hello")]),s._v("，然后在其他组件中去使用，重点就是 "),n("code",{pre:!0},[s._v("showHello()")]),s._v(" 方法做的事情：调用 "),n("code",{pre:!0},[s._v("this.$createHello(config, renderFn)")]),s._v(" 实现组件的实例化。")])])])])}]}}});